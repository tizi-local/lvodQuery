// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: vodQuery/vodquery.proto

package tizi_local_proto_lvodQuery

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ErrCode int32

const (
	ErrCode_Success ErrCode = 0
	ErrCode_Failed  ErrCode = 1
)

// Enum value maps for ErrCode.
var (
	ErrCode_name = map[int32]string{
		0: "Success",
		1: "Failed",
	}
	ErrCode_value = map[string]int32{
		"Success": 0,
		"Failed":  1,
	}
)

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_vodQuery_vodquery_proto_enumTypes[0].Descriptor()
}

func (ErrCode) Type() protoreflect.EnumType {
	return &file_vodQuery_vodquery_proto_enumTypes[0]
}

func (x ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCode.Descriptor instead.
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{0}
}

type Filter int32

const (
	Filter_default Filter = 0
	Filter_nearby  Filter = 1
	Filter_follow  Filter = 2
)

// Enum value maps for Filter.
var (
	Filter_name = map[int32]string{
		0: "default",
		1: "nearby",
		2: "follow",
	}
	Filter_value = map[string]int32{
		"default": 0,
		"nearby":  1,
		"follow":  2,
	}
)

func (x Filter) Enum() *Filter {
	p := new(Filter)
	*p = x
	return p
}

func (x Filter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Filter) Descriptor() protoreflect.EnumDescriptor {
	return file_vodQuery_vodquery_proto_enumTypes[1].Descriptor()
}

func (Filter) Type() protoreflect.EnumType {
	return &file_vodQuery_vodquery_proto_enumTypes[1]
}

func (x Filter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Filter.Descriptor instead.
func (Filter) EnumDescriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{1}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode ErrCode    `protobuf:"varint,1,opt,name=errCode,proto3,enum=tizi.local.lvodquery.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string     `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	Details []*any.Any `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetErrCode() ErrCode {
	if x != nil {
		return x.ErrCode
	}
	return ErrCode_Success
}

func (x *Error) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *Error) GetDetails() []*any.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Uid  int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ListQuery) Reset() {
	*x = ListQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuery) ProtoMessage() {}

func (x *ListQuery) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuery.ProtoReflect.Descriptor instead.
func (*ListQuery) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{1}
}

func (x *ListQuery) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListQuery) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type FeedQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	FilterType Filter `protobuf:"varint,2,opt,name=filterType,proto3,enum=tizi.local.lvodquery.Filter" json:"filterType,omitempty"`
	VSession   string `protobuf:"bytes,3,opt,name=vSession,proto3" json:"vSession,omitempty"`
}

func (x *FeedQueryReq) Reset() {
	*x = FeedQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedQueryReq) ProtoMessage() {}

func (x *FeedQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedQueryReq.ProtoReflect.Descriptor instead.
func (*FeedQueryReq) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{2}
}

func (x *FeedQueryReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FeedQueryReq) GetFilterType() Filter {
	if x != nil {
		return x.FilterType
	}
	return Filter_default
}

func (x *FeedQueryReq) GetVSession() string {
	if x != nil {
		return x.VSession
	}
	return ""
}

type FeedQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session string    `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Total   int64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page    int64     `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Videos  []*Videos `protobuf:"bytes,4,rep,name=videos,proto3" json:"videos,omitempty"`
}

func (x *FeedQueryResp) Reset() {
	*x = FeedQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedQueryResp) ProtoMessage() {}

func (x *FeedQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedQueryResp.ProtoReflect.Descriptor instead.
func (*FeedQueryResp) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{3}
}

func (x *FeedQueryResp) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *FeedQueryResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FeedQueryResp) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FeedQueryResp) GetVideos() []*Videos {
	if x != nil {
		return x.Videos
	}
	return nil
}

type Videos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid           string  `protobuf:"bytes,1,opt,name=vid,proto3" json:"vid,omitempty"`
	VideoUrl      string  `protobuf:"bytes,2,opt,name=videoUrl,proto3" json:"videoUrl,omitempty"`
	VideoDesc     string  `protobuf:"bytes,3,opt,name=videoDesc,proto3" json:"videoDesc,omitempty"`
	VideoTitle    string  `protobuf:"bytes,4,opt,name=videoTitle,proto3" json:"videoTitle,omitempty"`
	LikeCount     int64   `protobuf:"varint,5,opt,name=likeCount,proto3" json:"likeCount,omitempty"`
	CommentCount  int64   `protobuf:"varint,6,opt,name=commentCount,proto3" json:"commentCount,omitempty"`
	ForwardCount  int64   `protobuf:"varint,7,opt,name=forwardCount,proto3" json:"forwardCount,omitempty"`
	FavoriteCount int64   `protobuf:"varint,8,opt,name=favoriteCount,proto3" json:"favoriteCount,omitempty"`
	Author        *Author `protobuf:"bytes,10,opt,name=author,proto3" json:"author,omitempty"`
	Poi           []*Poi  `protobuf:"bytes,9,rep,name=poi,proto3" json:"poi,omitempty"`
}

func (x *Videos) Reset() {
	*x = Videos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Videos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Videos) ProtoMessage() {}

func (x *Videos) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Videos.ProtoReflect.Descriptor instead.
func (*Videos) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{4}
}

func (x *Videos) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *Videos) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *Videos) GetVideoDesc() string {
	if x != nil {
		return x.VideoDesc
	}
	return ""
}

func (x *Videos) GetVideoTitle() string {
	if x != nil {
		return x.VideoTitle
	}
	return ""
}

func (x *Videos) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Videos) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *Videos) GetForwardCount() int64 {
	if x != nil {
		return x.ForwardCount
	}
	return 0
}

func (x *Videos) GetFavoriteCount() int64 {
	if x != nil {
		return x.FavoriteCount
	}
	return 0
}

func (x *Videos) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Videos) GetPoi() []*Poi {
	if x != nil {
		return x.Poi
	}
	return nil
}

type Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Author) Reset() {
	*x = Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{5}
}

func (x *Author) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Author) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Poi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PoiId     string  `protobuf:"bytes,2,opt,name=poiId,proto3" json:"poiId,omitempty"`
	Tags      string  `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	Longitude float64 `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude  float64 `protobuf:"fixed64,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *Poi) Reset() {
	*x = Poi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Poi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poi) ProtoMessage() {}

func (x *Poi) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poi.ProtoReflect.Descriptor instead.
func (*Poi) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{6}
}

func (x *Poi) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Poi) GetPoiId() string {
	if x != nil {
		return x.PoiId
	}
	return ""
}

func (x *Poi) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *Poi) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Poi) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type CommentQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Vid       string `protobuf:"bytes,2,opt,name=vid,proto3" json:"vid,omitempty"`
	CommentId int64  `protobuf:"varint,3,opt,name=commentId,proto3" json:"commentId,omitempty"`
}

func (x *CommentQueryReq) Reset() {
	*x = CommentQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentQueryReq) ProtoMessage() {}

func (x *CommentQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentQueryReq.ProtoReflect.Descriptor instead.
func (*CommentQueryReq) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{7}
}

func (x *CommentQueryReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CommentQueryReq) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *CommentQueryReq) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type CommentQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Page     int64       `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Comments []*Comments `protobuf:"bytes,3,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *CommentQueryResp) Reset() {
	*x = CommentQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentQueryResp) ProtoMessage() {}

func (x *CommentQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentQueryResp.ProtoReflect.Descriptor instead.
func (*CommentQueryResp) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{8}
}

func (x *CommentQueryResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CommentQueryResp) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CommentQueryResp) GetComments() []*Comments {
	if x != nil {
		return x.Comments
	}
	return nil
}

type Comments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId   string         `protobuf:"bytes,1,opt,name=commentId,proto3" json:"commentId,omitempty"`
	Comment     string         `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	Uid         string         `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	MentionUser []*MentionUser `protobuf:"bytes,3,rep,name=mentionUser,proto3" json:"mentionUser,omitempty"`
	Timestamp   int64          `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SubComCount int64          `protobuf:"varint,5,opt,name=subComCount,proto3" json:"subComCount,omitempty"`
}

func (x *Comments) Reset() {
	*x = Comments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comments) ProtoMessage() {}

func (x *Comments) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comments.ProtoReflect.Descriptor instead.
func (*Comments) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{9}
}

func (x *Comments) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *Comments) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Comments) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Comments) GetMentionUser() []*MentionUser {
	if x != nil {
		return x.MentionUser
	}
	return nil
}

func (x *Comments) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Comments) GetSubComCount() int64 {
	if x != nil {
		return x.SubComCount
	}
	return 0
}

type MentionUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Uid      string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *MentionUser) Reset() {
	*x = MentionUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MentionUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MentionUser) ProtoMessage() {}

func (x *MentionUser) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MentionUser.ProtoReflect.Descriptor instead.
func (*MentionUser) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{10}
}

func (x *MentionUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *MentionUser) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type CommentCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid         string         `protobuf:"bytes,1,opt,name=vid,proto3" json:"vid,omitempty"`
	Comment     string         `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	CommentId   int64          `protobuf:"varint,3,opt,name=commentId,proto3" json:"commentId,omitempty"`
	Uid         string         `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	MentionUser []*MentionUser `protobuf:"bytes,5,rep,name=mentionUser,proto3" json:"mentionUser,omitempty"`
}

func (x *CommentCreateReq) Reset() {
	*x = CommentCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentCreateReq) ProtoMessage() {}

func (x *CommentCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentCreateReq.ProtoReflect.Descriptor instead.
func (*CommentCreateReq) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{11}
}

func (x *CommentCreateReq) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *CommentCreateReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CommentCreateReq) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentCreateReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CommentCreateReq) GetMentionUser() []*MentionUser {
	if x != nil {
		return x.MentionUser
	}
	return nil
}

type FavoriteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Vid      string `protobuf:"bytes,2,opt,name=vid,proto3" json:"vid,omitempty"`
	Favorite int32  `protobuf:"varint,3,opt,name=favorite,proto3" json:"favorite,omitempty"`
}

func (x *FavoriteReq) Reset() {
	*x = FavoriteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteReq) ProtoMessage() {}

func (x *FavoriteReq) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteReq.ProtoReflect.Descriptor instead.
func (*FavoriteReq) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{12}
}

func (x *FavoriteReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FavoriteReq) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *FavoriteReq) GetFavorite() int32 {
	if x != nil {
		return x.Favorite
	}
	return 0
}

type LikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Vid  string `protobuf:"bytes,2,opt,name=vid,proto3" json:"vid,omitempty"`
	Like int32  `protobuf:"varint,3,opt,name=like,proto3" json:"like,omitempty"`
}

func (x *LikeReq) Reset() {
	*x = LikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vodQuery_vodquery_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeReq) ProtoMessage() {}

func (x *LikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_vodQuery_vodquery_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeReq.ProtoReflect.Descriptor instead.
func (*LikeReq) Descriptor() ([]byte, []int) {
	return file_vodQuery_vodquery_proto_rawDescGZIP(), []int{13}
}

func (x *LikeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LikeReq) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *LikeReq) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

var File_vodQuery_vodquery_proto protoreflect.FileDescriptor

var file_vodQuery_vodquery_proto_rawDesc = []byte{
	0x0a, 0x17, 0x76, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x6f, 0x64, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x74, 0x69, 0x7a, 0x69, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x31, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76,
	0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x46, 0x65, 0x65, 0x64, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x06,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74,
	0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x73, 0x22, 0xe3, 0x02, 0x0a, 0x06, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6b,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69,
	0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x03, 0x70,
	0x6f, 0x69, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x50, 0x6f, 0x69, 0x52, 0x03, 0x70, 0x6f, 0x69, 0x22, 0x2e, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x03, 0x50, 0x6f, 0x69, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x55, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x78,
	0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x43, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0xb3, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x43, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x6d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x0b, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x2a, 0x22, 0x0a, 0x07, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x01, 0x2a, 0x2d, 0x0a,
	0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x02, 0x32, 0xa1, 0x06, 0x0a,
	0x0f, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x54, 0x0a, 0x09, 0x46, 0x65, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x22, 0x2e,
	0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c,
	0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x74, 0x69,
	0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e,
	0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x12, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x12, 0x26, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76,
	0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x5a, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x26, 0x2e, 0x74,
	0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x63, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x25, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x26,
	0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x08, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x21, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e,
	0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x55, 0x0a, 0x0d, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x23, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x04, 0x4c, 0x69, 0x6b,
	0x65, 0x12, 0x1d, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c,
	0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x74, 0x69, 0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76,
	0x6f, 0x64, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x51, 0x0a,
	0x09, 0x4c, 0x69, 0x6b, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x74, 0x69, 0x7a,
	0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x23, 0x2e, 0x74, 0x69,
	0x7a, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x6c, 0x76, 0x6f, 0x64, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x2b, 0x5a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x3b, 0x74, 0x69, 0x7a, 0x69, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x6c, 0x76, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vodQuery_vodquery_proto_rawDescOnce sync.Once
	file_vodQuery_vodquery_proto_rawDescData = file_vodQuery_vodquery_proto_rawDesc
)

func file_vodQuery_vodquery_proto_rawDescGZIP() []byte {
	file_vodQuery_vodquery_proto_rawDescOnce.Do(func() {
		file_vodQuery_vodquery_proto_rawDescData = protoimpl.X.CompressGZIP(file_vodQuery_vodquery_proto_rawDescData)
	})
	return file_vodQuery_vodquery_proto_rawDescData
}

var file_vodQuery_vodquery_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_vodQuery_vodquery_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_vodQuery_vodquery_proto_goTypes = []interface{}{
	(ErrCode)(0),             // 0: tizi.local.lvodquery.ErrCode
	(Filter)(0),              // 1: tizi.local.lvodquery.Filter
	(*Error)(nil),            // 2: tizi.local.lvodquery.Error
	(*ListQuery)(nil),        // 3: tizi.local.lvodquery.ListQuery
	(*FeedQueryReq)(nil),     // 4: tizi.local.lvodquery.FeedQueryReq
	(*FeedQueryResp)(nil),    // 5: tizi.local.lvodquery.FeedQueryResp
	(*Videos)(nil),           // 6: tizi.local.lvodquery.Videos
	(*Author)(nil),           // 7: tizi.local.lvodquery.Author
	(*Poi)(nil),              // 8: tizi.local.lvodquery.Poi
	(*CommentQueryReq)(nil),  // 9: tizi.local.lvodquery.CommentQueryReq
	(*CommentQueryResp)(nil), // 10: tizi.local.lvodquery.CommentQueryResp
	(*Comments)(nil),         // 11: tizi.local.lvodquery.Comments
	(*MentionUser)(nil),      // 12: tizi.local.lvodquery.MentionUser
	(*CommentCreateReq)(nil), // 13: tizi.local.lvodquery.CommentCreateReq
	(*FavoriteReq)(nil),      // 14: tizi.local.lvodquery.FavoriteReq
	(*LikeReq)(nil),          // 15: tizi.local.lvodquery.LikeReq
	(*any.Any)(nil),          // 16: google.protobuf.Any
}
var file_vodQuery_vodquery_proto_depIdxs = []int32{
	0,  // 0: tizi.local.lvodquery.Error.errCode:type_name -> tizi.local.lvodquery.ErrCode
	16, // 1: tizi.local.lvodquery.Error.details:type_name -> google.protobuf.Any
	1,  // 2: tizi.local.lvodquery.FeedQueryReq.filterType:type_name -> tizi.local.lvodquery.Filter
	6,  // 3: tizi.local.lvodquery.FeedQueryResp.videos:type_name -> tizi.local.lvodquery.Videos
	7,  // 4: tizi.local.lvodquery.Videos.author:type_name -> tizi.local.lvodquery.Author
	8,  // 5: tizi.local.lvodquery.Videos.poi:type_name -> tizi.local.lvodquery.Poi
	11, // 6: tizi.local.lvodquery.CommentQueryResp.comments:type_name -> tizi.local.lvodquery.Comments
	12, // 7: tizi.local.lvodquery.Comments.mentionUser:type_name -> tizi.local.lvodquery.MentionUser
	12, // 8: tizi.local.lvodquery.CommentCreateReq.mentionUser:type_name -> tizi.local.lvodquery.MentionUser
	4,  // 9: tizi.local.lvodquery.VodQueryService.FeedQuery:input_type -> tizi.local.lvodquery.FeedQueryReq
	9,  // 10: tizi.local.lvodquery.VodQueryService.CommentQueryFirst:input_type -> tizi.local.lvodquery.CommentQueryReq
	13, // 11: tizi.local.lvodquery.VodQueryService.CommentCreateFirst:input_type -> tizi.local.lvodquery.CommentCreateReq
	13, // 12: tizi.local.lvodquery.VodQueryService.CommentCreateSecond:input_type -> tizi.local.lvodquery.CommentCreateReq
	9,  // 13: tizi.local.lvodquery.VodQueryService.CommentQuerySecond:input_type -> tizi.local.lvodquery.CommentQueryReq
	14, // 14: tizi.local.lvodquery.VodQueryService.Favorite:input_type -> tizi.local.lvodquery.FavoriteReq
	3,  // 15: tizi.local.lvodquery.VodQueryService.FavoriteQuery:input_type -> tizi.local.lvodquery.ListQuery
	15, // 16: tizi.local.lvodquery.VodQueryService.Like:input_type -> tizi.local.lvodquery.LikeReq
	3,  // 17: tizi.local.lvodquery.VodQueryService.LikeQuery:input_type -> tizi.local.lvodquery.ListQuery
	5,  // 18: tizi.local.lvodquery.VodQueryService.FeedQuery:output_type -> tizi.local.lvodquery.FeedQueryResp
	10, // 19: tizi.local.lvodquery.VodQueryService.CommentQueryFirst:output_type -> tizi.local.lvodquery.CommentQueryResp
	2,  // 20: tizi.local.lvodquery.VodQueryService.CommentCreateFirst:output_type -> tizi.local.lvodquery.Error
	2,  // 21: tizi.local.lvodquery.VodQueryService.CommentCreateSecond:output_type -> tizi.local.lvodquery.Error
	10, // 22: tizi.local.lvodquery.VodQueryService.CommentQuerySecond:output_type -> tizi.local.lvodquery.CommentQueryResp
	2,  // 23: tizi.local.lvodquery.VodQueryService.Favorite:output_type -> tizi.local.lvodquery.Error
	5,  // 24: tizi.local.lvodquery.VodQueryService.FavoriteQuery:output_type -> tizi.local.lvodquery.FeedQueryResp
	2,  // 25: tizi.local.lvodquery.VodQueryService.Like:output_type -> tizi.local.lvodquery.Error
	5,  // 26: tizi.local.lvodquery.VodQueryService.LikeQuery:output_type -> tizi.local.lvodquery.FeedQueryResp
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_vodQuery_vodquery_proto_init() }
func file_vodQuery_vodquery_proto_init() {
	if File_vodQuery_vodquery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vodQuery_vodquery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Videos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Poi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MentionUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vodQuery_vodquery_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vodQuery_vodquery_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vodQuery_vodquery_proto_goTypes,
		DependencyIndexes: file_vodQuery_vodquery_proto_depIdxs,
		EnumInfos:         file_vodQuery_vodquery_proto_enumTypes,
		MessageInfos:      file_vodQuery_vodquery_proto_msgTypes,
	}.Build()
	File_vodQuery_vodquery_proto = out.File
	file_vodQuery_vodquery_proto_rawDesc = nil
	file_vodQuery_vodquery_proto_goTypes = nil
	file_vodQuery_vodquery_proto_depIdxs = nil
}
